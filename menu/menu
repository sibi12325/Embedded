#include <TFT_eSPI.h>

// Input pins
#define SELECT_BUTTON 0
#define UP_BUTTON 16
#define DOWN_BUTTON 17

TFT_eSPI tft = TFT_eSPI();

#define totalGames 2;

bool downPressed = false;
bool upPressed = true;

int currentSelection = 0;

void setup() 
{

  tft.init();
  tft.fillScreen(TFT_BLACK);

  Serial.begin(115200);

  tft.setTextSize(2);

  // Initialize buttons
  pinMode(SELECT_BUTTON, INPUT_PULLUP);
  pinMode(UP_BUTTON, INPUT_PULLUP);
  pinMode(DOWN_BUTTON, INPUT_PULLUP);

  // Display the menu
  drawMenu();
  
}

void loop() 
{
  Serial.println(String(currentSelection));
  // Moving up the menu
  if (digitalRead(UP_BUTTON) == HIGH) 
  {
    if(!upPressed)
    {
      currentSelection = !currentSelection;
      drawMenu();
      delay(200);
    }

    upPressed = true;

  }else
  {
    upPressed = false;
  }

  // Moving down the menu
  if (digitalRead(DOWN_BUTTON) == HIGH) 
  {
    if (!downPressed)
    {
      currentSelection = !currentSelection;
      drawMenu();
      delay(200);
    }

    downPressed = true;

  }
  else
  {
    downPressed = false;
  }

  // selecting a game
  if (!digitalRead(SELECT_BUTTON) == HIGH) 
  {
    selectGame(currentSelection);
    delay(500);
  }
}

void drawMenu() 
{
  tft.fillScreen(TFT_BLACK);

  tft.setTextColor(TFT_WHITE);
  tft.drawString("Select a Game:", 10, tft.height() / 4);

  if (currentSelection == 0) 
  {
    tft.setTextColor(TFT_YELLOW);
    tft.drawString("Pong", 80, 2*tft.height() / 4);
  } 
  else 
  {
    tft.setTextColor(TFT_WHITE);
    tft.drawString("Pong", 80, 2*tft.height() / 4);
  }
  tft.setCursor(50, 110);

  if (currentSelection == 1) 
  {
    tft.setTextColor(TFT_YELLOW);
    tft.drawString("Snake", 80, 3*tft.height() / 4);
  } 
  else 
  {
    tft.setTextColor(TFT_WHITE);
    tft.drawString("Snake", 80, 3*tft.height() / 4);
  }
}

void selectGame(int selection) 
{
  switch (selection) 
  {
    case 0:
      runPong();
      break;

    case 1:
      runSnake();
      break;
  }
}

void runPong()
{
  return;
}
void runSnake()
{
  return;
}
